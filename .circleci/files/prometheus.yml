AWSTemplateFormatVersion: 2010-09-09
Description: Setup promethus servers
Parameters:
  ProjectName:
    Description: Project stack is been applied to.
    Type: String
    Default: udapeople
  KeyName:
    Description: Key-pair to log into the instance
    Type: String
    Default: uda-devops-us-east1
  # ImageID:
  #   Description: AMI ID for the instance (Amazon Linux 2 AMI)
  #   Type: String
  #   Default: ami-03368e982f317ae48 # N.Virgina Amazon Linux 2
  InstanceType:
    Description: Machine capacity
    Type: String
    Default: t2.micro

Mappings:
  Region2AMI:
    us-east-1:
      AMI: ami-068663a3c619dd892 # Ubuntu Image
Resources:
  PromIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: /
  
  PromAccessPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${ProjectName}-prom-iam-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: "secretsmanager:*"
            Resource: !Sub "arn:aws:secretsmanager:us-east-1:${AWS::AccountId}:secret:aws-access-key-O2heRR"
      Roles:
      - !Ref PromIamRole

  PromInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref PromIamRole

  PrometheusSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${ProjectName}-Prometheus-server SG
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 9090
          ToPort: 9090
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 9100
          ToPort: 9100
          CidrIp: 0.0.0.0/0 # To be changed to VPC Cidr
        - IpProtocol: tcp
          FromPort: 9093
          ToPort: 9093
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  PrometheusInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap [ Region2AMI, !Ref AWS::Region, AMI ]
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref PromInstanceProfile
      SecurityGroups:
        - Ref: PrometheusSG
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-Prometheus-server
      UserData:
        Fn::Base64: !Sub |
          #! /bin/bash

          apt-get update -y
          apt-get install git unzip jq -y
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          ./aws/install
          git clone --branch develop https://github.com/tutugodfrey/udapeople
          cd udapeople/prometheus
          AWS_DEFAULT_REGION=$(!Ref AWS::Region)
          echo Region is ====== $AWS_DEFAULT_REGIONN
          echo Checking for REGION----------------
          if [ -z $AWS_DEFAULT_REGION ]; then
            export AWS_DEFAULT_REGION=us-east-1
          fi
          ACCESS_KEY_ID=$(aws secretsmanager get-secret-value --secret-id aws-access-key | jq --raw-output '.SecretString' | jq '.' | jq -r "to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]" | grep -w "\<access-key-id\>" | awk -F'=' '{ print $2 }')
          SECRET_ACCESS_KEY=$(aws secretsmanager get-secret-value --secret-id aws-access-key | jq --raw-output '.SecretString' | jq '.' | jq -r "to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]" | grep -w "\<secret-access-key\>" | awk -F'=' '{ print $2 }')
          ALERT_EMAIL_PASSWORD=$(aws secretsmanager get-secret-value --secret-id aws-access-key | jq --raw-output '.SecretString' | jq '.' | jq -r "to_entries|map(\"\(.key)=\(.value|tostring)\")|.[]" | grep -w "\<email-password\>" | awk -F'=' '{ print $2 }')
          ALERT_SENDER_EMAIL=$(aws ssm get-parameters --name alert-sender-email --with-decryption --output text --query "Parameters[*].Value")
          ALERT_RECEIVER_EMAIL=$(aws ssm get-parameters --name alert-receiver-email --with-decryption --output text --query "Parameters[*].Value")
          sed -i "s/AWS_REGION/$AWS_DEFAULT_REGION/" prometheus.yml
          sed -i "s/ACCESS_KEY_ID/$ACCESS_KEY_ID/" prometheus.yml
          echo SECRET_ACCESS_KEY $SECRET_ACCESS_KEY 
          sed -i "s|SECRET_ACCESS_KEY|$SECRET_ACCESS_KEY|" prometheus.yml
          sed -i "s|ALERT_EMAIL_PASSWORD|$ALERT_EMAIL_PASSWORD|" alertmanager.yml
          sed -i "s|ALERT_RECEIVER_EMAIL|$ALERT_RECEIVER_EMAIL|" alertmanager.yml
          sed -i "s|ALERT_SENDER_EMAIL|$ALERT_SENDER_EMAIL|" alertmanager.yml
          ./prometheus.sh

Outputs:
  InstanceID:
    Description: IP address of the Instance
    Value: !Ref PrometheusInstance
  
  InstancePublicIP:
    Description: IP address of the Instance
    Value: !GetAtt PrometheusInstance.PublicIp

  InstancePrivateDns:
    Description: Prometheus server DNS
    Value: !GetAtt PrometheusInstance.PrivateDnsName

  InstancePublicDns:
    Description: Prometheus server DNS
    Value: !GetAtt PrometheusInstance.PublicDnsName